@using Blazor.Models
@page "/basket"

<PageTitle>Customer Basket</PageTitle>

<h1>Available Products</h1>

<EditForm Model="_searchInput" OnValidSubmit="SearchDatabase">
    <span>Filter: </span>
    <InputText @bind-Value="_searchInput.NameFilter" placeholder="Filter by name..."></InputText>
    <InputText @bind-Value="_searchInput.DescFilter" placeholder="Filter by description..."></InputText>
    <button type="submit">Search</button>
</EditForm><br>
@if (_products.Count > 0)
{
    <ul>
        @foreach (Product product in _products)
        {
            <li>
                <span>@product.Name | </span>
                @if (product.Description != "")
                {
                    <span>@product.Description | </span>
                }
                <span>@($"£{product.Price.ToString("0.00")}") | </span>

                <button @onclick="() => AddToBasket(product)">Add To Basket</button>
            </li>
        }
    </ul>

    <label for="add-amount">Amount to add: </label> <input type="number" id="add-amount" @bind-value="_newItemAmount"
    min="1">
}
else
{
    <p>No products found!</p>
}


<h1>Basket</h1>

<p>Total price: @_basket.TotalPrice</p>

<!-- I'm not a fan of how messy this looks, but it's a result of mixing html with code and pretty much unavoidable-->
<ul>
    @foreach (BasketItem item in _basketItems)
    {
        <li>
            <span>(@item.Quantity) @item.Product.Name | </span>
            @if (item.Product.Description != "")
            {
                <span>@item.Product.Description | </span>
            }
            <span>@($"£{item.Product.Price.ToString("0.00")}") | </span>

            @if (item.Quantity < 2)
            {
                <button @onclick="() => RemoveFromBasket(item)">Remove</button>
            }
            else
            {
                <button @onclick="() => RemoveFromBasket(item)">Remove All</button>

                <button @onclick="() => RemoveAmount(item, item.RemoveAmount)">Remove </button>
                <input type="number" min="1" max="@item.Quantity" @bind-value="item.RemoveAmount">
            }
        </li>
    }
</ul>
